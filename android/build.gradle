buildscript {
    ext {
        kotlin_version = '1.9.20' // ✅ Already good
        java_version = JavaVersion.VERSION_1_8 // ✅ Recommended for most Android builds
    }

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.3.1' // ✅ Stable latest (avoid preview 8.5.0)
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.4.0' // ✅ Latest & stable
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }

    // ✅ Kotlin compile options
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = java_version.toString()
        }
    }

    // ✅ Java compile options
    tasks.withType(JavaCompile).configureEach {
        sourceCompatibility = java_version
        targetCompatibility = java_version
    }
}

subprojects {
    afterEvaluate { project ->
        if (project.plugins.hasPlugin("com.android.application") ||
            project.plugins.hasPlugin("com.android.library")) {
            project.android {
                compileSdkVersion = 34 // ✅ 34 is stable; 35 still beta (optional)
            }
        }

        // ✅ Safe namespace fallback
        if (project.hasProperty('android')) {
            project.android {
                if (!project.hasProperty('namespace') || namespace == null) {
                    namespace = project.group ?: "com.example.${project.name}"
                }
            }
        }
    }
}

// ✅ Build dir management
rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
    project.evaluationDependsOn(':app')
}

// ✅ Clean task
tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
